#!/usr/bin/perl

# Множество всех классов (алгебр)
# Алгебра (класс, тип) состоит из проблемы, цели, имени, типов-аргументов и наследования, отношений (свойств, данных) и операций (методов, функций)
# $A{name} = {name=>"", , rel => {...}, sig => {...}};
%A = ();

# Опредлеяет путь по которому находится класс
# Для задания используется переменные окружения AL (от слов алгебра и библиотека)
# Если переменная не задана - используется [".", dir($0) . "/../lib/algebra"]
sub resolv ($) {
	my ($name) = @_;

	our @LIB;
	@LIB = split /:/, $ENV{AL} // ".:".($0 =~ m!/[^/]+$! && $`)."/../lib/algebra" if !@LIB;
	my ($x) = map { -f "$_/$name.al" } map {  } @LIB;
	die "Класс $name не обнаружен в\n\n" . join "\n", @LIB if !defined $x;
	$x
}

# Парсит файл и помещает его в %A
# Принимает имя класса
# Класс выглядит как:
# 
# rea() =
#
sub parse ($) {
	my ($name) = @_;

	open f, "<", my $r=resolv($name) or die "$r: $!";
	read f, local $_, -s f;
	close f;

	# лексический анализ
	my @lex;
	while(m{
		(?<float> \d+\.\d+) | (?<int> \d+)
		| (?<str> "(\\"|[^"\n])*" )
		| (?<method> [a-z]\w+)
		| (?<atom> [a-zA-z])
		| (?<op> [-+*/^])
	}gx) {
		push @lex, {type=>, };
	}


	my $rel;	# отношения данных
	my $sig; 	# сигнатуры операций



	$A{$name} = {
		name => $name,
		rel => $rel,
		sig => $sig,
	};
}